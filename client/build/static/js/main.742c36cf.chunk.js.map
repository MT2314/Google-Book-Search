{"version":3,"sources":["components/Nav.js","utils/API.js","components/Searchbar.js","components/GoogleBooksSearch.js","pages/Search.js","components/List/index.js","pages/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["navigation","Navbar","collapseOnSelect","expand","href","style","textAlign","fontSize","width","marginTop","Toggle","aria-controls","Collapse","id","Nav","className","position","top","left","to","Button","variant","size","axios","get","delete","bookData","post","readUpdate","put","read","value","favourite","Searchbar","handleChange","handleSubmit","onSubmit","marginLeft","type","display","onChange","height","placeholder","GoogleBooksSearch","useState","book","setBook","result","setResult","apiKey","searchTitle","setSearchTitle","GetAuthors","authors","Object","keys","values","map","author","marginBottom","useEffect","then","data","bookList","JSON","parse","request","response","results","books","console","log","list","push","Math","floor","random","description","book_image","book_uri","title","event","target","preventDefault","items","Card","marginRight","Provider","color","float","opacity","Body","Title","volumeInfo","Text","substring","src","undefined","imageLinks","thumbnail","alt","onClick","selectedSave","filter","previewLink","saveIcon","API","image","link","handleSave","Search","List","children","ListItem","Saved","setBooks","loadBooks","res","catch","err","setFavourite","currentFavourite","zIndex","_id","key","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.742c36cf.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Navbar, Nav, Button} from 'react-bootstrap'\r\n\r\n\r\nconst navigation = () => {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Navbar collapseOnSelect expand=\"lg\">\r\n                <h1 href=\"/\" style = {{textAlign:'center', fontSize:'5em', width:'100%', marginTop:'4%'}}>Book Search</h1>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mt-3 ml-3\" style={{position:\"absolute\", top:0, left:0}}>\r\n                        <Link className = \"navlink mr-2\" to=\"/\"><Button variant=\"outline-primary\" size=\"lg\"> Search </Button></Link>\r\n                        <Link className = \"navlink\" to=\"/saved\"><Button variant=\"outline-primary\" size=\"lg\">Saved</Button> </Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default navigation","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all books\r\n  getBooks: function () {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  // Gets the book with the given id\r\n  getBook: function (id) {\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function (id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function (bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  },\r\n  // Updates a book in the database\r\n  updateRead: function (id, readUpdate) {\r\n    return axios.put(\"/api/books/\" + id,{\r\n      read:true\r\n    });\r\n  },\r\n  updateFavourite: function (id, value) {\r\n    return axios.put(\"/api/books/\" + id,value,{\r\n      favourite:value\r\n    });\r\n  }\r\n};","import React from 'react'\r\n\r\nconst Searchbar = ({ handleChange, handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} style={{ marginLeft:'10%'}}>\r\n            <div className=\"card-header main-search ml-5\">\r\n                <div className=\"row\">\r\n                    <input type=\"submit\" value=\"Search\" className=\"btn btn-primary search-btn\" style={{ display: 'inline-block', width: '8em'}} />\r\n                    <input onChange={handleChange} style={{ height: '3em', width: '60%' }} className=\"AutoFocus form-control ml-2\" placeholder=\"Search by Author or Book Title...\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Searchbar\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport API from '../utils/API';\r\nimport { HiOutlineSave } from 'react-icons/hi';\r\nimport { IconContext } from \"react-icons\";\r\n\r\n\r\n// Components\r\nimport Searchbar from '../components/Searchbar';\r\n\r\n//Pages\r\n\r\nfunction GoogleBooksSearch() {\r\n    const [book, setBook] = useState(\"\");\r\n    const [result, setResult] = useState([]);\r\n    const [apiKey, setApiKey] = useState(\"AIzaSyB_V20DDr3fhU_BPr1kxQ8Y8TLIRSzdqh8\")\r\n    const [searchTitle, setSearchTitle] = useState(\"Best Seller List -- New York Times\")\r\n\r\n\r\n    useEffect(() => {\r\n        topBooks();\r\n    }, []);\r\n\r\n    function handleChange(event) {\r\n        const book = event.target.value;\r\n        setBook(book);\r\n    }\r\n    // New York Times\r\n    function topBooks() {\r\n        axios.get(\"https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=694MbzN7OXrK12FTyAjrN8Zoih4ay72d\")\r\n            .then(data => {\r\n                const bookFile = JSON.parse(data.request.response);\r\n                const bookList = bookFile.results.books;\r\n                console.log(bookList)\r\n                const list = [];\r\n                (bookList.map((book) => {\r\n                    list.push({\r\n                        \"id\": Math.floor(Math.random() * 1000),\r\n                        \"saveIcon\": '0.15',\r\n                        \"volumeInfo\": {\r\n                            \"authors\": [book.author],\r\n                            \"description\": book.description,\r\n                            \"imageLinks\": {\r\n                                \"thumbnail\": book.book_image,\r\n                            },\r\n                            \"link\": book.book_uri,\r\n                            \"title\": book.title\r\n                        }\r\n                    }\r\n                    )\r\n                }))\r\n                setResult(list);\r\n                console.log(list)\r\n            })\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + book + \"&key=\" + apiKey + \"&maxResults=40\")\r\n            .then(data => {\r\n                setSearchTitle(book);\r\n                setResult(data.data.items);\r\n            })\r\n    }\r\n\r\n\r\n    function handleSave(id) {\r\n        console.log(result)\r\n        const selectedSave = result.filter((book) => book.id === id);\r\n        console.log(selectedSave);\r\n        const { authors, description, imageLinks, previewLink, title, saveIcon } = selectedSave[0].volumeInfo;\r\n        console.log(selectedSave[0].volumeInfo)\r\n        API.saveBook({\r\n            authors: authors,\r\n            description: description,\r\n            image: imageLinks.thumbnail,\r\n            link: previewLink,\r\n            title: title\r\n        })\r\n    }\r\n\r\n    function GetAuthors(authors) {\r\n\r\n        if (Object.keys(authors > 0)) {\r\n            let authorsArr = Object.values(authors)\r\n            const authorsList = authorsArr.map(author => {\r\n                return <p style={{ marginBottom: 0 }}>{author}</p>\r\n            })\r\n            return authorsList\r\n        } else {\r\n            return <p>No Listed Authors</p>\r\n        }\r\n    }\r\n\r\n    // function showSavedIcon(id) {\r\n    //     const toggleCheck = result.filter(result => result.id === id);\r\n    //     if (toggleCheck.length) {\r\n    //         return true;\r\n    //     } else {\r\n    //         return false;\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <Searchbar handleChange={handleChange} handleSubmit={handleSubmit} />\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12 col-md-12 col-xl-12\">\r\n                    <h2 style={{ textAlign: 'center', marginTop: 50 }}>{searchTitle}</h2>\r\n                    <div className={'container mt-5'}>\r\n                        {result.map(book => (\r\n                            <Card style={{ marginTop: '10px', marginLeft: '30px', marginRight: '10px', }}>\r\n                                <IconContext.Provider value={{ color: 'green', size: '3em', className: \"global-class-name mr-3 mt-3\" }}>\r\n                                    <div>\r\n                                        <HiOutlineSave style={{ float: 'right', opacity: 0 }} />\r\n                                    </div>\r\n                                </IconContext.Provider>\r\n                                <Card.Body>\r\n                                    <Card.Title style={{ fontSize: 34 }}>{book.volumeInfo.title}</Card.Title>\r\n                                    <div style={{ display: 'flex' }}>\r\n                                        <Card.Text>\r\n                                            <p>{(book.volumeInfo.description) ? book.volumeInfo.description.substring(0, 250) : 'No Description has been found'}</p>\r\n                                            <h4>Authors</h4>\r\n                                            <GetAuthors {...book.volumeInfo.authors} />\r\n                                        </Card.Text>\r\n                                        <img style={{ marginLeft: '100px', marginRight: '50px', height: '35vh' }} src={book.volumeInfo.imageLinks !== undefined ? book.volumeInfo.imageLinks.thumbnail : ''} alt={book.title} />\r\n                                    </div>\r\n                                    <Button variant='primary' onClick={() => handleSave(book.id)}>Save</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default GoogleBooksSearch","import React from 'react'\r\nimport GoogleBooksSearch from \"../components/GoogleBooksSearch\";\r\n\r\nconst Search = () => {\r\n    return (\r\n        <>\r\n            <GoogleBooksSearch ></GoogleBooksSearch>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React, { useState, useEffect } from 'react'\r\nimport API from \"../utils/API\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { FaHeart } from 'react-icons/fa';\r\nimport { FiDelete,FiHeart } from 'react-icons/fi';\r\nimport { IconContext } from \"react-icons\";\r\n\r\n\r\n\r\n\r\n\r\nconst Saved = () => {\r\n\r\n    const [books, setBooks] = useState([])\r\n    const [currentbook, setCurrentBook] = useState()\r\n    // Load all books and store them with setBooks\r\n    useEffect(() => {\r\n        loadBooks()\r\n    }, [])\r\n\r\n    // Loads all books and sets them to books\r\n    function loadBooks() {\r\n        API.getBooks()\r\n            .then(res =>\r\n                setBooks(res.data)\r\n            )\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    // Mark Book Read\r\n    function markRead(id) {\r\n        API.updateRead(id, {\r\n            read: true\r\n        })\r\n            .then(() => loadBooks())\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    // Set Favourite\r\n    function setFavourite(id,currentFavourite) {\r\n\r\n        API.updateFavourite(id, {\r\n            favourite:!currentFavourite\r\n        })\r\n            .then(() => loadBooks())\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    // Remove\r\n    function removeSave(id) {\r\n        API.deleteBook(id)\r\n            .then(() => loadBooks())\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    function GetAuthors(authors) {\r\n\r\n        if (Object.keys(authors > 0)) {\r\n            let authorsArr = Object.values(authors)\r\n            const authorsList = authorsArr.map(author => {\r\n                return <p style={{ marginBottom: 0 }}>{author}</p>\r\n            })\r\n            return authorsList\r\n        } else {\r\n            return <p>No Listed Authors</p>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 style={{ textAlign: 'center' }}>Your Saved Books</h1>\r\n            <div className=\"row ml-4 mt-5\">\r\n                <div className=\"col-sm-5 col-md-5 col-xl-5\">\r\n                    <div className={'container mt-2'}>\r\n                        <h3 className={'mt-3'} >Books I Want To Read</h3>\r\n                        {books.map(book => (\r\n                            (book.read === false) && <div>\r\n                                <IconContext.Provider value={{ color: \"red\", size: '1.5em', className: \"global-class-name\", style: { position: 'relative', marginLeft: '98%', top: 15, zIndex: 2 } }}>\r\n                                    <div>\r\n                                        <FiDelete onClick={() => (removeSave(book._id))} />\r\n                                    </div>\r\n                                </IconContext.Provider>\r\n                                <ListItem key={book._id} >\r\n                                    <Card>\r\n                                        <div className={'d-inline'}>\r\n                                            <img style={{ marginLeft: '100px', width: 100, float: 'right' }} src={book.image ? book.image : null} alt={book.title} />\r\n                                            <h2>{book.title}</h2>\r\n                                            <GetAuthors {...book.authors} />\r\n                                            <Button style={{ marginTop: 20, width: '100%', color: 'white', fontSize: 20 }} size=\"sm\" variant=\"success\" onClick={() => markRead(book._id)}>Mark Read</Button>\r\n                                        </div>\r\n                                    </Card>\r\n                                </ListItem>\r\n                            </div>\r\n                        ))}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-sm-3 col-md-3 col-xl-3\">\r\n                    <div className={'container mt-3'}>\r\n                        <div className={'container mt-3'} style={{ marginBottom: '20%' }}>\r\n                            <List>\r\n\r\n                                <h4 className={'mt-3'} >My Favourites      <FaHeart style={{ color: 'red' }} /> </h4>\r\n                                {books.map(book => (\r\n                                    (book.favourite === true) && <ListItem key={book._id}>\r\n                                        <strong>\r\n                                            {book.title}\r\n                                        </strong>\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n                <div className=\"col-sm-3 col-md-3 col-xl-3\">\r\n                    <div className={'container mt-3'}>\r\n                        <List>\r\n                            <h4 className={'mt-3'} >Books I Have Read</h4>\r\n                            {books.map(book => (\r\n                                (book.read === true) && <div>\r\n                                    <IconContext.Provider value={{ color: \"red\", size: '1.5em', className: \"global-class-name\", style: { position: 'relative', marginLeft: '98%', top: 15, zIndex: 2 } }}>\r\n                                        {book.favourite === false ?\r\n                                            <div>\r\n                                                {<FiHeart  onClick={() => (setFavourite(book._id,book.favourite))} /> }\r\n                                            </div> :\r\n                                            <div>\r\n                                                <FaHeart onClick={() => (setFavourite(book._id,book.favourite))} />\r\n                                            </div>\r\n                                        }\r\n                                    </IconContext.Provider>\r\n                                    <ListItem key={book._id}>\r\n                                        <strong>\r\n                                            {book.title}\r\n                                        </strong>\r\n                                    </ListItem>\r\n                                </div>\r\n                            ))}\r\n                        </List>\r\n                    </div>\r\n                </div >\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Saved;","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route,Switch } from 'react-router-dom'\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n// Components\nimport Nav from \"./components/Nav\";\n\n\n// Pages\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Nav />\n        <Switch>\n        <Route exact path=\"/\" component={Search} />\n        <Route exact path=\"/saved\" component={Saved} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}